<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:shadow_of_the_wyrm:1.0.0" targetNamespace="urn:shadow_of_the_wyrm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0.0">
<!-- ELEMENTS -->
<xs:element name="ShadowOfTheWyrm">
	<xs:annotation><xs:documentation>The configuration root node - contains all the races, classes, and game data.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Deities"/>
			<xs:element ref="tns:Races"/>
			<xs:element ref="tns:Classes"/>
			<xs:element ref="tns:Creatures"/>
			<xs:element ref="tns:Spells"/>
			<xs:element ref="tns:Tiles"/>
			<xs:element ref="tns:Traps"/>
			<xs:element ref="tns:Items"/>
			<xs:element ref="tns:Calendar"/>
			<xs:element ref="tns:Scripts"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Deities">
	<xs:annotation><xs:documentation>A list of the deities available for worship within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Deity" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Races">
	<xs:annotation><xs:documentation>A list of races to be used at runtime within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Race" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Classes">
	<xs:annotation><xs:documentation>A list of classes to be used at runtime within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Class" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Creatures">
	<xs:annotation><xs:documentation>A list of the creatures available for generation within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Creature" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Spells">
	<xs:annotation><xs:documentation>A list of spells available in-game.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Spell" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Spell">
	<xs:annotation><xs:documentation>A spell available to one of the classes.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="NameSID" type="xs:string"/>
			<xs:element name="PlayerCastMessageSID" type="xs:string"/>
			<xs:element name="MonsterCastMessageSID" type="xs:string"/>
			<xs:element name="MagicCategory" type="tns:MagicSkillType"/>
			<xs:element name="MagicClassification" type="tns:MagicClassificationType"/>
			<xs:element name="Colour" type="tns:ColourType"/>
			<xs:element name="APCost" type="xs:unsignedInt"/>
			<xs:element name="Speed" type="xs:integer"/>
			<xs:element name="Range" type="xs:unsignedInt"/>
			<xs:element name="Shape" type="tns:SpellShape"/>
			<xs:element name="Damage" type="tns:Damage" minOccurs="0"/>
			<xs:element name="Effect" type="tns:EffectType"/>
			<xs:element name="Properties" type="tns:Properties" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="tns:Identifier"/>
	</xs:complexType>
</xs:element>
<xs:element name="Tiles">
	<xs:annotation><xs:documentation>Contains information on the tile types</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="FieldTile" type="tns:Tile"/>
			<xs:element name="ScrubTile" type="tns:Tile"/>
			<xs:element name="WheatTile" type="tns:Tile"/>
			<xs:element name="CairnTile" type="tns:Tile"/>
			<xs:element name="TreeTile" type="tns:Tile"/>
			<xs:element name="DesertTile" type="tns:Tile"/>
			<xs:element name="RoadTile" type="tns:Tile"/>
			<xs:element name="RiverTile" type="tns:Tile"/>
			<xs:element name="SeaTile" type="tns:Tile"/>
			<xs:element name="ShoalsTile" type="tns:Tile"/>
			<xs:element name="DungeonTile" type="tns:Tile"/>
			<xs:element name="RockTile" type="tns:Tile"/>
			<xs:element name="GraveTile" type="tns:Tile"/>
			<xs:element name="MarshTile" type="tns:Tile"/>
			<xs:element name="ReedsTile" type="tns:Tile"/>
			<xs:element name="HillsTile" type="tns:Tile"/>
			<xs:element name="MountainsTile" type="tns:Tile"/>
			<xs:element name="BeachTile" type="tns:Tile"/>
			<xs:element name="BushTile" type="tns:Tile"/>
			<xs:element name="WeedsTile" type="tns:Tile"/>
			<xs:element name="SpringsTile" type="tns:Tile"/>
			<xs:element name="ForestTile" type="tns:Tile"/>
			<xs:element name="UpStaircaseTile" type="tns:Tile"/>
			<xs:element name="DownStaircaseTile" type="tns:Tile"/>
			<xs:element name="CavernTile" type="tns:Tile"/>
			<xs:element name="VillageTile" type="tns:Tile"/>
			<xs:element name="DungeonComplexTile" type="tns:Tile"/>
			<xs:element name="BarracksTile" type="tns:Tile"/>
			<xs:element name="CastleTile" type="tns:Tile"/>
			<xs:element name="ChurchTile" type="tns:Tile"/>
			<xs:element name="GraveyardTile" type="tns:Tile"/>
			<xs:element name="KeepTile" type="tns:Tile"/>
			<xs:element name="LibraryTile" type="tns:Tile"/>
			<xs:element name="SiteOfDeathTile" type="tns:Tile"/>
			<xs:element name="TempleTile" type="tns:Tile"/>
			<xs:element name="DaisTile" type="tns:Tile"/>
			<xs:element name="PierTile" type="tns:Tile"/>
			<xs:element name="BarrowTile" type="tns:Tile"/>
			<xs:element name="WildOrchardTile" type="tns:Tile"/>
			<xs:element name="FruitTreeTile" type="tns:Tile"/>
			<xs:element name="EvergreenTreeTile" type="tns:Tile"/>
			<xs:element name="RockyEarthTile" type="tns:Tile"/>
			<xs:element name="MineTile" type="tns:Tile"/>
			<xs:element name="WellTile" type="tns:Tile"/>
			<xs:element name="CryptTile" type="tns:Tile"/>
			<xs:element name="AirTile" type="tns:Tile"/>
			<xs:element name="EarthTile" type="tns:Tile"/>
			<xs:element name="SewerComplexTile" type="tns:Tile"/>
			<xs:element name="SewerTile" type="tns:Tile"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Traps">
	<xs:annotation><xs:documentation>Traps that the game can set.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Trap" type="tns:Trap" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Items">
	<xs:annotation><xs:documentation>The items available within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Armours" minOccurs="0"/>
			<xs:element ref="tns:Rings" minOccurs="0"/>
			<xs:element name="Weapons" type="tns:Weapons" minOccurs="0"/>
			<xs:element name="RangedWeapons" type="tns:Weapons" minOccurs="0"/>
			<xs:element ref="tns:Ammunition" minOccurs="0"/>
			<xs:element ref="tns:Foodstuffs" minOccurs="0"/>
			<xs:element ref="tns:Plants" minOccurs="0"/>
			<xs:element ref="tns:Boats" minOccurs="0"/>
			<xs:element ref="tns:Potions" minOccurs="0"/>
			<xs:element ref="tns:Scrolls" minOccurs="0"/>
			<xs:element ref="tns:Currencies" minOccurs="0"/>
			<xs:element ref="tns:Tools" minOccurs="0"/>
			<xs:element ref="tns:Wands" minOccurs="0"/>
			<xs:element ref="tns:Spellbooks" minOccurs="0"/>
			<xs:element ref="tns:MiscItems" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<!-- Wands/Staves -->
	<!-- Books -->
	<!-- Rings -->
</xs:element>
<xs:element name="Calendar">
	<xs:annotation>
		<xs:documentation>All notable in-game days.  The player gets a notification when the day arrives.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Day" type="tns:CalendarDayType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Scripts">
	<xs:annotation><xs:documentation>Scripts used by the Shadow of the Wyrm engine.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<!-- Run after character creation to have special effects when
				 starting on a particular day. -->
			<xs:element name="SpecialDaysScript" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Deity">
	<xs:annotation><xs:documentation>One of the Gods or Goddesses of Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="UserPlayable" type="xs:boolean"/>
			<xs:element name="NameSID" type="xs:string"/>
			<xs:element name="ShortDescriptionSID" type="xs:string"/>
			<xs:element name="DescriptionSID" type="xs:string"/>
			<xs:element name="AngerMessageSID" type="xs:string"/>
			<xs:element name="DeathMessageSID" type="xs:string"/>
			<xs:element name="Alignment" type="tns:AlignmentRange"/>
			<xs:element name="DeityInitialModifiers" type="tns:InitialStatisticsModifiers"/>
			<xs:element name="Dislikes" type="tns:TrackedDeityActions"/>
			<xs:element name="Crowning" type="tns:Crowning"/>
			<xs:element name="Summons" type="tns:Summons"/>
			<xs:element name="WorshipSiteType" type="tns:WorshipSiteType"/>
			<xs:element name="AngerScript" type="xs:string"/>
		</xs:sequence>
		<xs:attribute name="id" type="tns:Identifier" use="required"/>
	</xs:complexType>
</xs:element>
<xs:element name="Race">
	<xs:annotation><xs:documentation>A race within Shadow of the Wyrm.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="UserPlayable" type="xs:boolean"/>
			<xs:element name="LeavesCorpse" type="xs:boolean"/>
			<xs:element name="HasRandomVillages" type="xs:boolean" minOccurs="0"/>
			<xs:element name="SettlementType" type="tns:SettlementType" minOccurs="0"/>
			<xs:element name="SettlementTileSubtype" type="tns:SettlementTileSubtype" minOccurs="0"/>
			<xs:element name="NameSID" type="xs:string"/>
			<!-- ShortDescriptionSID, DescriptionSID, and DisplayAbbreviationSID should always
			     be defined for UserPlayable races, but are optional because they are never needed
				 for NPC-only races. -->
   			<xs:element name="ShortDescriptionSID" type="xs:string" minOccurs="0"/>
			<xs:element name="DescriptionSID" type="xs:string" minOccurs="0"/>
			<xs:element name="DisplayAbbreviationSID" type="xs:string" minOccurs="0"/>
			<xs:element name="Size" type="tns:CreatureSizeType"/>
			<xs:element name="Hungerless" type="xs:boolean" minOccurs="0"/>
			<xs:element ref="tns:AgeInfo"/>
			<xs:element ref="tns:RaceInitialStatistics"/>
			<xs:element name="Corporeal" type="xs:boolean"/>
			<xs:element name="Undead" type="xs:boolean" minOccurs="0"/>
			<xs:element name="Flying" type="xs:boolean"/>
			<xs:element ref="tns:RaceInitialDeities"/>
			<xs:element ref="tns:Resistances"/>
			<xs:element ref="tns:Skills"/>
			<xs:element name="ExperienceMultiplier" type="tns:NonNegativeDecimal"/>
			<xs:element name="HPRegenMultiplier" type="xs:float"/>
			<xs:element name="APRegenMultiplier" type="xs:float"/>
			<xs:element name="LevelScript" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="tns:Identifier" use="required"/>
		<xs:attribute name="parent_id" type="tns:Identifier" use="optional"/>
	</xs:complexType>
</xs:element>
<xs:element name="AllowableTerrainTypes">
	<xs:annotation><xs:documentation>Information on allowable terrain types for generation (of creatures, objects, etc)</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<!-- minOccurs can be 0 for creatures with no tiletype.  This is useful for specifying creatures that cannot
			     be randomly generated - special creatures only found on a certain map, etc. -->
			<xs:element name="TileType" type="tns:TileType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="CreatureGeneration">
	<xs:annotation><xs:documentation>Information about how to generate a particular creature, and where.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<!-- If max is < 0, then there is no limit on the number of creatures that can be generated.
			     Otherwise, max functions as a generation limit.  max = 0 doesn't make sense, but isn't
				 disallowed (it could be included to temporarily exclude a creature from the game).
				 max = 1 is a unique. -->
			<xs:element name="Max" type="xs:integer" minOccurs="0"/>
			<xs:element ref="tns:AllowableTerrainTypes"/>
			<xs:element name="GeneratorFilters" type="tns:GeneratorFilters" minOccurs="0"/>
			<!-- If Friendly is true, the creature is guaranteed to be generated
			     without hostility towards the player. -->
			<xs:element name="Friendly" type="xs:boolean" minOccurs="0"/>
			<xs:element name="DangerLevel" type="xs:integer"/>
			<xs:element name="Rarity" type="tns:Rarity"/>
			<!-- HP and AP are random, and get generated for each monster created. -->
			<xs:element name="HP" type="tns:Dice"/>
			<!-- Most creatures don't use spells, so this is optional. -->
			<xs:element name="AP" type="tns:Dice" minOccurs="0"/>
			<xs:element name="Exp" type="xs:unsignedInt"/>
			<xs:element ref="tns:InitialEquipmentAndInventory" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="AgeInfo">
	<xs:annotation>
		<xs:documentation>Describes starting and maximum ages for a particular race.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="StartingAge" type="tns:AgeRange"/>
			<xs:element name="MaximumAge" type="tns:AgeRange"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="RaceInitialStatistics">
<xs:annotation><xs:documentation>Races control the initial values of certain statistics.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Strength" type="tns:PrimaryStatistic"/>
			<xs:element name="Dexterity" type="tns:PrimaryStatistic"/>
			<xs:element name="Agility" type="tns:PrimaryStatistic"/>
			<xs:element name="Health" type="tns:PrimaryStatistic"/>
			<xs:element name="Intelligence" type="tns:PrimaryStatistic"/>
			<xs:element name="Willpower" type="tns:PrimaryStatistic"/>
			<xs:element name="Charisma" type="tns:PrimaryStatistic"/>
			<xs:element name="Speed" type="tns:Statistic"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:complexType name="TrackedDeityActions">
	<xs:sequence>
		<xs:element name="Action" type="tns:TrackedDeityAction" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Crowning">
	<xs:sequence>
		<xs:element name="Artifact" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Summons">
	<xs:sequence>
		<xs:element name="Summon" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="InitialStatisticsModifiers">
	<xs:sequence>
		<xs:element name="StrengthModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="DexterityModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="AgilityModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="HealthModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="IntelligenceModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="WillpowerModifier" type="tns:StatisticModifier" minOccurs="0"/>
		<xs:element name="CharismaModifier" type="tns:StatisticModifier" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:element name="RaceInitialDeities">
<xs:annotation><xs:documentation>The deities that can be selected when creating a creature of a particular race</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="DeityID" type="tns:Identifier" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Creature">
	<xs:annotation>
		<xs:documentation>A template for a particular creature type</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="RaceID" type="tns:Identifier"/>
			<xs:element name="ClassID" type="tns:Identifier" minOccurs="0"/>
			<xs:element name="BreatheType" type="tns:BreatheType" minOccurs="0"/>
			<xs:element name="ShortDescriptionSID" type="xs:string"/>
			<xs:element name="DescriptionSID" type="xs:string"/>
			<xs:element name="TextDetailsSID" type="xs:string"/>
			<xs:element name="SpeechTextSID" type="xs:string" minOccurs="0"/>
            <!-- Used to create a decision strategy for the creature.  Currently accepted values:
                 - default (or just ignore the field)
				 - immobile_default
				 - immobile_aggressive
				 - mobile
				 - Any unaccepted value provided will map to "default" in Shadow of the Wyrm.
			-->
			<xs:element name="DecisionStrategy" type="tns:DecisionStrategyType" minOccurs="0"/>
			<xs:element name="Text" type="tns:TextDetails"/>
			<xs:element ref="tns:CreatureGeneration"/>
			<xs:element name="Level" type="tns:PrimaryStatistic"/>
			<xs:element name="Damage" type="tns:Damage" minOccurs="0"/>
			<xs:element name="Evade" type="xs:integer" minOccurs="0"/>
			<xs:element name="Soak" type="xs:integer" minOccurs="0"/>
			<!-- Optionally override race/class speed.  This allows some
			     creatures of a certain race to be faster or slower than
				 others. -->
			<xs:element name="Speed" type="xs:integer" minOccurs="0"/>
			<xs:element ref="tns:EventScripts" minOccurs="0"/>
			<xs:element name="Spells" type="tns:SpellsType" minOccurs="0"/>
			<xs:element name="Properties" type="tns:Properties" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="tns:Identifier" use="required"/>
	</xs:complexType>
</xs:element>
<xs:element name="EventScripts">
	<xs:annotation>
		<xs:documentation>Names scripts that can be used when a particular event (death, etc) occurs.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="DeathScript" type="tns:ScriptDetails" minOccurs="0"/>
			<xs:element name="AttackScript" type="tns:ScriptDetails" minOccurs="0"/>
			<xs:element name="ChatScript" type="tns:ScriptDetails" minOccurs="0"/>
			<xs:element name="DecisionScript" type="tns:ScriptDetails" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="ItemScripts">
	<xs:annotation>
		<xs:documentation>Scripts that can be run when something happens to the item.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="AmmunitionDestructionScript" type="tns:ScriptDetails" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Class">
	<xs:annotation>
		<xs:documentation>A creature Class.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="UserPlayable" type="xs:boolean"/>
			<xs:element name="NameSID" type="xs:string"/>
			<xs:element name="ShortDescriptionSID" type="xs:string"/>
			<xs:element name="DescriptionSID" type="xs:string"/>
			<xs:element name="DisplayAbbreviationSID" type="xs:string"/>
			<xs:element name="ClassInitialModifiers" type="tns:InitialStatisticsModifiers"/>
			<xs:element name="HitDice" type="xs:unsignedInt"/>
			<xs:element name="APDice" type="xs:unsignedInt"/>
			<xs:element name="HPRegenMultiplier" type="xs:float"/>
			<xs:element name="APRegenMultiplier" type="xs:float"/>
			<xs:element ref="tns:Resistances"/>
			<xs:element ref="tns:Skills"/>
			<xs:element ref="tns:Titles"/>
			<xs:element name="PietyCostMultiplier" type="tns:NonNegativeDecimal" minOccurs="0"/>
			<xs:element name="PietyRegenBonus" type="xs:integer" minOccurs="0"/>
			<xs:element name="ExperienceMultiplier" type="tns:NonNegativeDecimal"/>
			<xs:element ref="tns:DeityDislikeMultipliers" minOccurs="0"/>
			<xs:element ref="tns:InitialEquipmentAndInventory" minOccurs="0"/>
			<xs:element name="LevelScript" type="xs:string" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="tns:Identifier" use="required"/>
	</xs:complexType>
</xs:element>
<xs:element name="Resistances">
<xs:annotation><xs:documentation>Each resistance is either positive (resistance) or negative (vulnerability), and is a delta subtracted from a base value of 1.  The final resistance is a damage multiplier, so any value greater than 1 inflicts more damage, and any value less than 1 inflicts less damage (in extreme cases, values can be negative, which heal)</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Slash" type="xs:float" minOccurs="0"/>
			<xs:element name="Pierce" type="xs:float" minOccurs="0"/>
			<xs:element name="Pound" type="xs:float" minOccurs="0"/>
			<xs:element name="Heat" type="xs:float" minOccurs="0"/>
			<xs:element name="Cold" type="xs:float" minOccurs="0"/>
			<xs:element name="Acid" type="xs:float" minOccurs="0"/>
			<xs:element name="Poison" type="xs:float" minOccurs="0"/>
			<xs:element name="Holy" type="xs:float" minOccurs="0"/>
			<xs:element name="Shadow" type="xs:float" minOccurs="0"/>
			<xs:element name="Arcane" type="xs:float" minOccurs="0"/>
			<xs:element name="Lightning" type="xs:float" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="GeneralSkills">
	<xs:annotation>
		<xs:documentation>General skills (not weapon or magic)</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Archery" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Awareness" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Bargaining" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Beastmastery" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="BlindFighting" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Boating" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Bowyer" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Brewing" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Carrying" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Combat" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Crafting" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="DesertLore" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Detection" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="DisarmTraps" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="DualWield" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Dungeoneering" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Escape" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Fishing" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Fletchery" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Foraging" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="ForestLore" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Herbalism" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Hiding" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Hunting" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Intimidation" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Jeweler" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Jumping" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Leadership" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Literacy" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Lore" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Magic" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="MarshLore" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Medicine" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="MountainLore" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Mountaineering" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Music" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="NightSight" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Oceanography" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Papercraft" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Religion" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Scribing" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Skinning" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Smithing" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Spelunking" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Stealth" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Swimming" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Tanning" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Thievery" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Weaving" type="tns:PercentageStatistic" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="WeaponSkills">
	<xs:annotation>
		<xs:documentation>Melee weapon skills such as clubs, swords, etc.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Axes" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="ShortBlades" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="LongBlades" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Bludgeons" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Daggers" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="RodsAndStaves" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Spears" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Unarmed" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Whips" type="tns:PercentageStatistic" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="RangedWeaponSkills">
	<xs:annotation>
		<xs:documentation>Ranged weapon skills such as bows, slings, etc.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Axes" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Blades" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Bludgeons" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Bows" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Crossbows" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Daggers" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Rocks" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Slings" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Spears" type="tns:PercentageStatistic" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="MagicSkills">
	<xs:annotation>
		<xs:documentation>Magic skills</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Arcane" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Divine" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Mystic" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Primordial" type="tns:PercentageStatistic" minOccurs="0"/>
			<xs:element name="Cantrips" type="tns:PercentageStatistic" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Skills">
	<xs:annotation>
		<xs:documentation>The general, melee, ranged, and magic skills available.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:GeneralSkills"  minOccurs="0"/>
			<xs:element ref="tns:WeaponSkills" minOccurs="0"/>
			<xs:element ref="tns:RangedWeaponSkills" minOccurs="0"/>
			<xs:element ref="tns:MagicSkills" minOccurs="0"/>		
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Titles">
	<xs:annotation>
		<xs:documentation>A set of titles, attached to a particular class.  Each title is a SID.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Default" type="xs:string"/>
			<xs:element ref="tns:Title" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Title">
	<xs:annotation>
		<xs:documentation>A particular title for a particular class.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Level" type="xs:int"/>
			<xs:element name="SID" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="DeityDislikeMultipliers">
	<xs:annotation>
		<xs:documentation>Multipliers for any deity dislikes.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:DeityDislikeMultiplier" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="DeityDislikeMultiplier">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Action" type="xs:string"/>
			<xs:element name="Multiplier" type="xs:float"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="InitialEquipmentAndInventory">
	<xs:annotation>
		<xs:documentation>Starting equipment and inventory for a particular class.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Head" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Neck" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="RightFinger" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="LeftFinger" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Wielded" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="OffHand" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Body" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="AroundBody" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Feet" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Ranged" type="tns:InitialItem" minOccurs="0"/>
			<xs:element name="Ammunition" type="tns:InitialItem" minOccurs="0"/>
			<xs:element ref="tns:InitialInventory" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="InitialInventory">
	<xs:annotation>
		<xs:documentation>Starting inventory for a particular class.</xs:documentation>
	</xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="InitialItem" type="tns:InitialItem" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Ammunition">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Missile" type="tns:Weapon" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Foodstuffs">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Food" type="tns:Consumable" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Plants">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Plant" type="tns:Consumable" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Boats">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Boat" type="tns:Item" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Potions">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Potion" type="tns:Potion" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Scrolls">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Scroll" type="tns:Scroll" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Currencies">
	<xs:complexType>
		<xs:sequence>
			<!-- There is only support for one currency within the game world. -->
			<xs:element name="Currency" type="tns:Item" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Tools">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Tool" type="tns:Tool" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Wands">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Wand" type="tns:Wand" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Spellbooks">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Spellbook" type="tns:Spellbook" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="MiscItems">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Item" type="tns:Item" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Armours">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Armour" type="tns:Armour" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<xs:element name="Rings">
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Ring" type="tns:Ring" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<!-- COMPLEX TYPES -->
<!-- The "InitialItem complex type should have a choice of
		1. An item ID
		   or
		2. A list of potential item IDs (random selection will occur)
		   or
		3. A list of string-string pairs, which represent a race/item-ID override of #1.
  -->
<xs:complexType name="CalendarDayType">
	<xs:sequence>
		<xs:element name="NameSID" type="xs:string"/>
		<xs:element name="DescriptionSID" type="xs:string"/>
		<!-- CalendarDay is the n-th day of the year.  The game tracks both "days elapsed"
		     (0 is day 1 of the year, 1 day elapsed is day 2, ...) and "day of" (day x of
			 the year). -->
		<xs:element name="CalendarDay" type="xs:integer"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="GeneratorFilters">
	<xs:sequence>
		<xs:element name="Filter" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Trap">
	<xs:sequence>
		<xs:element name="DescriptionSID" type="xs:string"/>
		<xs:element name="TriggerMessageSID" type="xs:string"/>
		<xs:element name="TriggerSymbol" type="xs:string"/>
		<xs:element name="PlayerDamageMessageSID" type="xs:string"/>
		<xs:element name="Colour" type="tns:ColourType"/>
		<!-- Item is an item id, and used if the trap has a chance of generating an item (e.g, an arrow, a rock) when triggered. -->
		<xs:element name="Item" type="tns:Identifier" minOccurs="0"/>
		<xs:element name="Damage" type="tns:Damage"/>
		<xs:element name="Uses" type="xs:int"/>
	</xs:sequence>
	<xs:attribute name="id" type="tns:Identifier"/>
</xs:complexType>
<xs:complexType name="SpellsType">
	<xs:annotation>
		<xs:documentation>A list of spells known by a particular creature</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Spell" type="tns:SpellType" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="SpellType">
	<xs:annotation>
		<xs:documentation>A particular spell known by a particular creature</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="SpellID" type="xs:string"/>
		<xs:element name="Castings" type="xs:integer"/>
		<xs:element name="Bonus" type="xs:integer" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Properties">
	<xs:sequence>
		<xs:element name="Property" type="tns:Property" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Property">
	<xs:sequence>
		<xs:element name="Name" type="xs:string"/>
		<xs:element name="Value" type="xs:string"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="InitialItem">
	<xs:sequence>
		<xs:element name="ID" type="tns:Identifier" minOccurs="0"/>
		<xs:element name="Quantity" type="tns:Quantity" minOccurs="0"/>
		<xs:element name="Random" minOccurs="0">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="ID" type="tns:Identifier" maxOccurs="unbounded"/>
					<xs:element name="Quantity" type="tns:Quantity" minOccurs="0"/>
				</xs:sequence>
			</xs:complexType>
		</xs:element>
		<xs:element name="Races" minOccurs="0">
			<xs:complexType>
				<xs:sequence>
					<xs:element name="Race" minOccurs="0" maxOccurs="unbounded">
						<xs:complexType>
							<xs:sequence>
								<xs:element name="RaceID" type="tns:Identifier"/>
								<xs:element name="ID" type="tns:Identifier"/>
								<xs:element name="Quantity" type="tns:Quantity" minOccurs="0"/>
							</xs:sequence>
						</xs:complexType>
					</xs:element>
				</xs:sequence>
			</xs:complexType>
		</xs:element>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Dice">
	<xs:sequence>
		<xs:element name="NumDice" type="xs:integer"/>
		<xs:element name="NumSides" type="xs:integer"/>
		<xs:element name="Modifier" type="xs:integer" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Damage">
	<xs:complexContent>
		<xs:extension base="tns:Dice">
			<xs:sequence>
				<xs:element name="Type" type="tns:DamageType"/>
				<xs:element name="EffectBonus" type="xs:integer" minOccurs="0"/>
				<!-- If this is not present, the default status ailment will be used.
				     If this is present but empty, the attack will inflict no status ailments.
					 Otherwise, the attack will inflict the status ailments present in the StatusAilments sequence. -->
				<xs:element name="StatusAilments" type="tns:StatusAilments" minOccurs="0"/>
			</xs:sequence>
			<xs:attribute name="chaotic" type="xs:boolean" use="optional" default="0"/>
			<xs:attribute name="piercing" type="xs:boolean" use="optional" default="0"/>
			<xs:attribute name="incorporeal" type="xs:boolean" use="optional" default="0"/>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="ScriptDetails">
	<xs:sequence>
		<xs:element name="Script" type="xs:string"/>
		<xs:element name="Chance" type="xs:integer" minOccurs="0" default="100"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="StatusAilments">
	<xs:annotation>
		<xs:documentation>A list of status ailments, whose values mirror those found in StatusTypes.cpp</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Status" type="tns:StatusAilmentType" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Weapons">
	<xs:sequence>
		<xs:element name="Weapon" type="tns:Weapon" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Item">
	<xs:annotation>
		<xs:documentation>
		The base class for all items.  If no unidentified description or usage description are provided,
		these will default to the same value as DescriptionSID and UsageDescriptionSID.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="DescriptionSID" type="xs:string"/>
		<xs:element name="UnidentifiedDescriptionSID" type="xs:string" minOccurs="0"/>
		<xs:element name="UsageDescriptionSID" type="xs:string"/>
		<xs:element name="UnidentifiedUsageDescriptionSID" type="xs:string" minOccurs="0"/>
		<xs:element name="Value" type="tns:NonNegativeInt"/>
		<xs:element name="Weight" type="tns:Weight"/>
		<xs:element name="WornLocation" type="tns:WornLocation" minOccurs="0"/>
		<xs:element name="ItemStatus" type="tns:ItemStatus" minOccurs="0"/>
<!--		<xs:element name="ItemType" type="tns:ItemType"/> -->
		<xs:element name="AutoCurse" type="xs:boolean"  minOccurs="0"/>
		<xs:element name="Artifact" type="xs:boolean" minOccurs="0"/>
		<xs:element name="HandsRequired" type="tns:HandsType" minOccurs="0"/>
		<xs:element name="Material" type="tns:MaterialType" minOccurs="0"/>
		<xs:element name="Glow" type="xs:boolean" minOccurs="0"/>
		<xs:element name="TextDetails" type="tns:TextDetails" minOccurs="0"/>
		<xs:element name="DangerLevel" type="xs:integer"/>
		<xs:element name="Rarity" type="tns:Rarity" minOccurs="0" default="0"/>
		<xs:element ref="tns:Resistances" minOccurs="0"/>
		<xs:element name="Properties" type="tns:Properties" minOccurs="0"/>
		<xs:element ref="tns:ItemScripts" minOccurs="0"/>
	</xs:sequence>
	<xs:attribute name="id" type="tns:Identifier"/>
</xs:complexType>
<xs:complexType name="Tool">
	<xs:complexContent>
		<xs:extension base="tns:Item">
			<xs:sequence>
				<!-- Keys can set this to be able to open all locks with a particular ID -->
				<xs:element name="LockID" type="tns:Identifier" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Consumable">
	<xs:complexContent>
		<xs:extension base="tns:Item">
			<xs:sequence>
				<xs:element name="Nutrition" type="xs:unsignedInt"/>
				<!-- StandardDrink is used generally for potions.  But then
					 I thought, what if Bork the Mighty made his porridge
					 with beer instead of water?  So I allowed food to be
					 alcoholic as well. 1 std drink = 0.6 fl oz of pure
					 alcohol (Canada/US definition) -->
				<xs:element name="StandardDrinks" type="xs:float" minOccurs="0"/>
				<xs:element name="FoodType" type="tns:FoodType" minOccurs="0"/>
				<xs:element name="Poisoned" type="xs:boolean" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Potion">
	<xs:complexContent>
		<xs:extension base="tns:Consumable">
			<xs:sequence>
				<xs:element name="Effect" type="tns:EffectType"/>
				<xs:element name="Damage" type="tns:Damage" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Wand">
	<xs:complexContent>
		<xs:extension base="tns:Item">
			<xs:sequence>
				<xs:element name="Effect" type="tns:EffectType" minOccurs="0"/>
				<xs:element name="Damage" type="tns:Damage" minOccurs="0"/>
				<xs:element name="BeamType" type="tns:WandSpellShape"/>
				<xs:element name="Range" type="xs:unsignedInt"/>
				<xs:element name="Colour" type="tns:ColourType"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Readable">
	<xs:complexContent>
		<xs:extension base="tns:Item">
			<xs:sequence>
				<xs:element name="TextSID" type="xs:string" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Spellbook">
	<xs:complexContent>
		<xs:extension base="tns:Readable">
			<xs:sequence>
				<xs:element name="SpellID" type="tns:Identifier"/>
				<xs:element name="Difficulty" type="xs:integer"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Scroll">
	<xs:complexContent>
		<xs:extension base="tns:Readable">
			<xs:sequence>
				<xs:element name="Effect" type="tns:EffectType"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Wearable">
	<xs:complexContent>
		<xs:extension base="tns:Item">
			<xs:sequence>
				<xs:element name="Evade" type="xs:integer" minOccurs="0"/>
				<xs:element name="Soak" type="xs:integer" minOccurs="0"/>
				<xs:element name="SpeedBonus" type="xs:integer" minOccurs="0"/>
				<xs:element name="ToHit" type="xs:integer" minOccurs="0"/>
				<xs:element name="AddlDamage" type="xs:integer" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Armour">
	<xs:complexContent>
		<xs:extension base="tns:Wearable">
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Ring">
	<xs:complexContent>
		<xs:extension base="tns:Wearable">
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="Weapon">
	<xs:annotation>
		<xs:documentation>If Skill is not provided, Shadow of the Wyrm will attempt to deduce it based on the other.
						  If neither is provided, the skill trained will default to Exotic.
		</xs:documentation>
	</xs:annotation>
	<xs:complexContent>
		<xs:extension base="tns:Wearable">
			<xs:sequence>
				<xs:element name="Skill" type="tns:TrainedWeaponSkill"/>
				<xs:element name="RangedSkill" type="tns:TrainedWeaponSkill"/>
				<xs:element name="RequiresRangedWeapon" type="xs:boolean" minOccurs="0"/>
				<xs:element name="Difficulty" type="xs:integer"/>
				<xs:element name="Speed" type="xs:integer"/>
				<xs:element name="Damage" type="tns:Damage"/>
				<xs:element name="Slays" type="tns:SlayRaces" minOccurs="0"/>
			</xs:sequence>
		</xs:extension>
	</xs:complexContent>
</xs:complexType>
<xs:complexType name="SlayRaces">
	<xs:annotation>
		<xs:documentation>
			Allows something (presumably, a weapon) to slay the specified races.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Slay" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Weight">
	<xs:sequence>
		<xs:element name="Pounds" type="xs:integer"/>
		<xs:element name="Ounces" type="xs:integer" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Quantity">
	<xs:choice>
		<xs:element name="Amount" type="xs:unsignedInt"/>
		<xs:element name="Random" type="tns:Dice"/>
	</xs:choice>
</xs:complexType>
<xs:complexType name="Tile">
	<xs:annotation><xs:documentation>Contains information about a particular tile type</xs:documentation></xs:annotation>
		<xs:sequence>
			<xs:element name="Text" type="tns:TextDetails" minOccurs="1"/>
		</xs:sequence>
</xs:complexType>
<xs:complexType name="DecisionStrategyType">
	<xs:annotation>
		<xs:documentation>Contains the necessary information to create and configure the creature's decision strategy</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Strategy" type="xs:string"/>
		<xs:element name="SuppressMagic" type="xs:boolean" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="TextDetails">
	<xs:annotation>
		<xs:documentation>Contains information about a particular tile type</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Symbol" type="xs:string" minOccurs="1"/>
		<xs:choice>
			<!-- Indicates that the colour will be used regardless of the season. -->
			<xs:element name="Colour" type="tns:ColourType"/>
			<!-- Indicates that colours will be provided for each season. -->
			<xs:element name="Colours" type="tns:SeasonColoursType"/>
		</xs:choice>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="SeasonColoursType">
	<xs:annotation>
		<xs:documentation>Information about a tile type's colour for each in-game season.</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="Spring" type="tns:ColourType"/>
		<xs:element name="Summer" type="tns:ColourType"/>
		<xs:element name="Autumn" type="tns:ColourType"/>
		<xs:element name="Winter" type="tns:ColourType"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="AgeRange">
	<xs:annotation><xs:documentation>A minimum and maximum age for some purpose.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Min" type="tns:NonNegativeInt"/>
		<xs:element name="Max" type="tns:NonNegativeInt"/>
	</xs:sequence>
</xs:complexType>
<!-- SIMPLE TYPES -->
<xs:simpleType name="HandsType">
	<xs:annotation>
		<xs:documentation>Number of hands required to use a melee weapon.</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="1"/>
		<xs:maxInclusive value="2"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="TrackedDeityAction">
	<xs:annotation>
		<xs:documentation>Actions that deities may take an interest in, one way or the other</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:string">
		<xs:enumeration value="AttackFriendlyCreature"/>
		<xs:enumeration value="Cannibalism"/>
		<xs:enumeration value="DesecrateGood"/>
		<xs:enumeration value="DesecrateNeutral"/>
		<xs:enumeration value="DesecrateEvil"/>
		<xs:enumeration value="GraveRobbing"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="TileType">
	<xs:annotation>
		<xs:documentation>See tiles.hpp for an explanation of the allowable values.</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="48"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="Rarity">
	<xs:annotation>
		<xs:documentation>The notion of rarity is used in creature and item generation.  While something
		may have a particular danger level, it can be rarer than other things at that danger level.
		
		0 = Common
		1 = Uncommon
		2 = Rare
		3 = Very Rare
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="3"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="SettlementType">
	<xs:annotation>
		<xs:documentation>The type of the settlement - used to generate the settlement over the base map.
		0 = Ordered Settlement
		1 = Hamlet
		2 = Walled Settlement
		3 = Scattered Settlement
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="3"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="SettlementTileSubtype">
	<xs:annotation>
		<xs:documentation>The subtile type for the settlement - used to generate the initial base map.
		Allowable values:
		0 = Field
		1 = Scrub
		5 = Desert
		13 = Marsh
		21 = Forest
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:enumeration value="0"/>
		<xs:enumeration value="1"/>
		<xs:enumeration value="5"/>
		<xs:enumeration value="13"/>
		<xs:enumeration value="21"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="AlignmentRange">
	<xs:annotation>
		<xs:documentation>An enumeration describing the possible general alignment ranges.
			0  = Evil
			1 = Neutral
			2 = Good
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="2"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="WorshipSiteType">
	<xs:annotation>
		<xs:documentation>A site defining the type of worship site a deity uses.
		0 = Cathedral
		1 = Fortified Church
		2 = Simple Church
		3 = Grand Temple
		4 = Snaking Temple
		5 = Simple Temple
		6 = Island Sacrifice Site
		7 = Rocky Sacrifice Site
		8 = Overgrown Sacrifice Site		
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="8"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="CreatureSizeType">
	<xs:annotation>
		<xs:documentation>An enumeration describing creature size.
					0 = Tiny
					1 = Small
					2 = Medium
					3 = Large
					4 = Huge
					5 = Behemoth
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxExclusive value="5"/>		
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="Statistic">
	<xs:annotation>
		<xs:documentation>General statistics (like HP, AP, etc) can be any integer value.</xs:documentation>
	</xs:annotation>
	<xs:union memberTypes="xs:integer"/>
</xs:simpleType>
<xs:simpleType name="StatisticModifier">
	<xs:annotation>
		<xs:documentation>A modifier for a statistic (Str, HP, etc) can be any integer value.</xs:documentation>
	</xs:annotation>
	<xs:union memberTypes="xs:integer"/>
</xs:simpleType>
<xs:simpleType name="PercentageStatistic">
	<xs:annotation>
		<xs:documentation>Percentage statistics, for things like Skills</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxExclusive value="100"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="PrimaryStatistic">
	<xs:annotation>
		<xs:documentation>Primary statistics (such as Strength, Intelligence, etc) can range between 1 and 99.</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="1"/>
		<xs:maxExclusive value="99"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="MaterialType">
	<xs:annotation>
		<xs:documentation>
			The type of material the item is made from.  Mirrors the enum in MaterialTypes.hpp.
			
			0 = Cloth
			1 = Dragon Scale
			2 = Glass
			3 = Iron
			4 = Leather
			5 = Paper
			6 = Steel
			7 = Stone
			8 = Wood
			9 = Marble
			10 = Onyx
			11 = Ivory
			12 = Bone
			13 = Gold
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="13"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ColourType">
	<xs:annotation>
		<xs:documentation>
			The colour, for text-based terminals.  See jrcpp/include/Colour.hpp.
			0 = Black
			1 = Red
			2 = Green
			3 = Yellow
			4 = Blue
			5 = Magenta
			6 = Cyan
			7 = White
			8 = Bold Black
			9 = Bold Red
			10 = Bold Green
			11 = Bold Yellow
			12 = Bold Blue
			13 = Bold Magenta
			14 = Bold Cyan
			15 = Bold White
			
			16 = Black on Red
			17 = Red on Red
			18 = Green on Red
			19 = Yellow on Red
			20 = Blue on Red
			21 = Cyan on Red
			22 = Magenta on Red
			23 = White on Red
			24 = Bold Black on Red
			25 = Bold Red on Red
			26 = Bold Green on Red
			27 = Bold Yellow on Red
			28 = Bold Blue on Red
			29 = Bold Magenta on Red
			30 = Bold Cyan on Red
			31 = Bold White on Red
			
			32 = Black on Green
			33 = Red on Green
			34 = Green on Green
			35 = Yellow on Green
			36 = Blue on Green
			37 = Magenta on Green
			38 = Cyan on Green
			39 = White on Green
			40 = Bold Black on Green
			41 = Bold Red on Green
			42 = Bold Green on Green
			43 = Bold Yellow on Green
			44 = Bold Blue on Green
			45 = Bold Magenta on Green
			46 = Bold Cyan on Green
			47 = Bold White on Green
			
			48 = Black on Yellow
			49 = Red on Yellow
			50 = Green on Yellow
			51 = Yellow on Yellow
			52 = Blue on Yellow
			53 = Magenta on Yellow
			54 = Cyan on Yellow
			55 = White on Yellow
			56 = Bold Black on Yellow
			57 = Bold Red on Yellow
			58 = Bold Green on Yellow
			59 = Bold Yellow on Yellow
			60 = Bold Blue on Yellow
			61 = Bold Magenta on Yellow
			62 = Bold Cyan on Yellow
			63 = Bold White on Yellow
			
			64 = Black on Blue
			65 = Red on Blue
			66 = Green on Blue
			67 = Yellow on Blue
			68 = Blue on Blue
			69 = Magenta on Blue
			70 = Cyan on Blue
			71 = White on Blue
			72 = Bold Black on Blue
			73 = Bold Red on Blue
			74 = Bold Green on Blue
			75 = Bold Yellow on Blue
			76 = Bold Blue on Blue
			77 = Bold Magenta on Blue
			78 = Bold Cyan on Blue
			79 = Bold White on Blue
			
			80 = Black on Magenta
			81 = Red on Magenta
			82 = Green on Magenta
			83 = Yellow on Magenta
			84 = Blue on Magenta
			85 = Magenta on Magenta
			86 = Cyan on Magenta
			87 = White on Magenta
			88 = Bold Black on Magenta
			89 = Bold Red on Magenta
			90 = Bold Green on Magenta
			91 = Bold Yellow on Magenta
			92 = Bold Blue on Magenta
			93 = Bold Magenta on Magenta
			94 = Bold Cyan on Magenta
			95 = Bold White on Magenta
			
			96 = Black on Cyan
			97 = Red on Cyan
			98 = Green on Cyan
			99 = Yellow on Cyan
			100 = Blue on Cyan
			101 = Magenta on Cyan
			102 = Cyan on Cyan
			103 = White on Cyan
			104 = Bold Black on Cyan
			105 = Bold Red on Cyan
			106 = Bold Green on Cyan
			107 = Bold Yellow on Cyan
			108 = Bold Blue on Cyan
			109 = Bold Magenta on Cyan
			110 = Bold Cyan on Cyan
			111 = Bold White on Cyan
			
			112 = Black on White
			113 = Red on White
			114 = Green on White
			115 = Yellow on White
			116 = Blue on White
			117 = Magenta on White
			118 = Cyan on White
			119 = White on White
			120 = Bold Black on White
			121 = Bold Red on White
			122 = Bold Green on White
			123 = Bold Yellow on White
			124 = Bold Blue on White
			125 = Bold Magenta on White
			126 = Bold Cyan on White
			127 = Bold White on White
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="127"/>
	</xs:restriction>

</xs:simpleType>
<xs:simpleType name="WornLocation">
	<xs:annotation>
		<xs:documentation>
			-1 = None (can't be worn)
			0 = Head
			1 = Neck
			2 = Left Hand (note that any item that can be worn in 2 can be worn in 3, and vice versa)
			3 = Right Hand
			4 = Body
			5 = About Body
			6 = Left Finger (note that any item that can be worn in 6 can be worn in 7, and vice versa)
			7 = Right Finger
			8 = Feet
			9 = Ranged
			10 = Ammunition
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="-1"/>
		<xs:maxInclusive value="10"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="EffectType">
	<xs:annotation>
		<xs:documentation>
			Enumeration describing a type of magical effect.  See engine/effects/include/EffectTypes.hpp:
				Null = 0
				Healing = 1
				Identify = 2
				Ether (sweet; restore AP) = 3
				Fruit Juice (sweet) = 4
				Teleport = 5
				Antidote = 6
				AMUT (anti-mute; not as useless as in Final Fantasy, honest!) = 7
				Haste (either anti-slow, or haste, depending on the creature's statuses) = 8
				Unstoning = 9
				Unbinding = 10
				Restore Statistics = 11
				Unblinding = 12
				Recharging = 13
				Incorporeal (Wraith Form) = 14
				Enchanting = 15
				Flying = 16
				Gain Attributes = 17
				Modify Statistics = 18
				Timewalk = 19
				Cleansing = 20
				Uncursing = 21
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="21"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="DamageType">
	<xs:annotation>	
		<xs:documentation>
			See DamageTypes.hpp:
			  	Slash = 0
  				Pierce = 1
  				Pound = 2
				Heat = 3
 				Cold = 4
				Acid = 5
				Poison = 6
				Holy = 7
				Shadow = 8
				Arcane = 9
				Lightning = 10
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="10"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="ItemStatus">
	<xs:annotation>
		<xs:documentation>
			0 = Uncursed (default) 
			1 = Blessed
			2 = Cursed
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="2"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="NonNegativeInt">
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="GeneralSkillType">
	<xs:annotation><xs:documentation>Range is defined in SkillTypes.hpp</xs:documentation></xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="49"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="MagicSkillType">
	<xs:annotation><xs:documentation>Range is defined in SkillTypes.hpp</xs:documentation></xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:enumeration value="3000"/>
		<xs:enumeration value="3001"/>
		<xs:enumeration value="3002"/>
		<xs:enumeration value="3003"/>
		<xs:enumeration value="3004"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="MagicClassificationType">
	<xs:annotation><xs:documentation>Range is defined in SpellTypes.hpp</xs:documentation></xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="-1"/>
		<xs:maxInclusive value="3"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="SpellShape">
	<xs:annotation>
		<xs:documentation>
			See SpellTypes.hpp:
			
			0 = Target Self
			1 = Beam
			2 = Reflective Beam
			3 = Cone
			4 = Ball
			5 = Cross
			6 = Storm
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="6"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="WandSpellShape">
	<xs:annotation><xs:documentation>Wands can't self-target.</xs:documentation></xs:annotation>
	<xs:restriction base="tns:SpellShape">		
		<xs:minInclusive value="1"/>
		<xs:maxInclusive value="6"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="TrainedWeaponSkill">
	<xs:annotation><xs:documentation>Range is defined in SkillTypes.hpp</xs:documentation></xs:annotation>
	<xs:restriction base="xs:integer">
		<xs:enumeration value="1000"/>
		<xs:enumeration value="1001"/>
		<xs:enumeration value="1002"/>
		<xs:enumeration value="1003"/>
		<xs:enumeration value="1004"/>
		<xs:enumeration value="1005"/>
		<xs:enumeration value="1006"/>
		<xs:enumeration value="1007"/>
		<xs:enumeration value="1008"/>
		<xs:enumeration value="1009"/>
		<xs:enumeration value="2000"/>
		<xs:enumeration value="2001"/>
		<xs:enumeration value="2002"/>
		<xs:enumeration value="2003"/>
		<xs:enumeration value="2004"/>
		<xs:enumeration value="2005"/>
		<xs:enumeration value="2006"/>
		<xs:enumeration value="2007"/>
		<xs:enumeration value="2008"/>
		<xs:enumeration value="2009"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="NonNegativeDecimal">
    <xs:restriction base="xs:decimal">
      <xs:minInclusive value="0"/>
      <xs:fractionDigits value="2"/>
    </xs:restriction>
  </xs:simpleType>
<xs:simpleType name="Identifier">
	<xs:restriction base="xs:string">
		<xs:pattern value="[a-zA-Z0-9_]*"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="StatusAilmentType">
	<xs:restriction base="xs:string">
		<xs:enumeration value="_poison"/>
		<xs:enumeration value="_mute"/>
		<xs:enumeration value="_para"/>
		<xs:enumeration value="_slow"/>
		<xs:enumeration value="_haste"/>
		<xs:enumeration value="_stone"/>
		<xs:enumeration value="_blood"/>
		<xs:enumeration value="_stun"/>
		<xs:enumeration value="_expose"/>
		<xs:enumeration value="_disf"/>
		<xs:enumeration value="_spellb"/>
		<xs:enumeration value="_blind"/>
		<xs:enumeration value="_incorp"/>
		<xs:enumeration value="_flying"/>
	</xs:restriction>
</xs:simpleType>
<!-- See CreatureFeatures.hpp -->
<xs:simpleType name="BreatheType">
	<xs:restriction base="xs:integer">
		<xs:enumeration value="0"/>
		<xs:enumeration value="1"/>
	</xs:restriction>
</xs:simpleType>
<!-- See ItemTypes.hpp -->
<xs:simpleType name="FoodType">
	<xs:restriction base="xs:integer">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="4"/>
	</xs:restriction>
</xs:simpleType>
</xs:schema>
