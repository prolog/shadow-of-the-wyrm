<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:savage_lands:maps:1.0.0" xmlns:sl="urn:savage_lands:1.0.0" targetNamespace="urn:savage_lands:maps:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0.0">
<xs:import namespace="urn:savage_lands:1.0.0" schemaLocation="../SavageLands.xsd"/>
<xs:element name="CustomMap">
	<xs:annotation><xs:documentation>XML element describing the custom maps that describe fixed locations within Savage Lands.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element ref="tns:Dimensions"/>
			<xs:element name="MapType" type="tns:MapType"/>
			<!-- This is a string of tiles, rows x cols, that represents a particular tile type.  The map is created by
				 adding the corresponding tile to the corresponding row/col.  Whitespace is ignored, as is any
				 unrecognized character. -->
			<xs:element name="Tiles" type="xs:string"/>
			<xs:element name="PlayerStart" type="tns:Coord" minOccurs="0"/>
			<xs:element name="InitialPlacements" type="tns:InitialPlacements" minOccurs="0"/>
			<xs:element name="Exits" type="tns:Exits" minOccurs="0"/>
			<xs:element name="Features" type="tns:Features" minOccurs="0"/>
		</xs:sequence>
		<xs:attribute name="id" type="xs:string" use="required"/>
	</xs:complexType>
</xs:element>
<xs:element name="Dimensions">
	<xs:annotation><xs:documentation>The dimensions of the map.</xs:documentation></xs:annotation>
	<xs:complexType>
		<xs:sequence>
			<xs:element name="Rows" type="xs:unsignedInt"/>
			<xs:element name="Columns" type="xs:unsignedInt"/>
		</xs:sequence>
	</xs:complexType>
</xs:element>
<!-- Complex Types -->
<xs:complexType name="Coord">
	<xs:annotation><xs:documentation>A (y,x) coordinate.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Row" type="xs:unsignedInt"/>
		<xs:element name="Col" type="xs:unsignedInt"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="InitialPlacements">
	<xs:annotation><xs:documentation>Initial, set placements of creatures and items.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Creatures" type="tns:IdentifiedPlacementList" minOccurs="0"/>
		<xs:element name="Items" type="tns:IdentifiedPlacementList" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="IdentifiedPlacementList">
	<xs:annotation><xs:documentation>A list of placements of a particular type (creature, item, etc).</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Placement" type="tns:IdentifiedPlacement" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="IdentifiedPlacement">
	<xs:annotation><xs:documentation>An ID (creature, item, etc), and coordinates on which the entity should be placed.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="ID" type="xs:string"/>
		<xs:element name="Coord" type="tns:Coord"/>
		<!-- Used only for creatures - has no meaning for items. -->
		<xs:element name="Friendly" type="xs:boolean" minOccurs="0"/>
		<!-- Quantity is only used for items. -->
		<xs:element name="Quantity" type="xs:unsignedInt" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Exits">
	<xs:annotation><xs:documentation>Contains details about tile exits to other set maps or the previous map.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Exit" type="tns:Exit" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Exit">
	<xs:annotation><xs:documentation>Contains details about a particular exit on a tile.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Coord" type="tns:Coord"/>
		<xs:element name="Direction" type="tns:Direction"/>
		<xs:element name="MapID" type="xs:string"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Features">
	<xs:annotation><xs:documentation>Tile features to be placed on the map.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="FeaturePlacement" type="tns:FeaturePlacement" minOccurs="0" maxOccurs="unbounded"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="FeaturePlacement">
	<xs:annotation><xs:documentation>A type consisting of a coordinate, and a type of feature.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Coord" type="tns:Coord"/>
		<xs:choice>
			<xs:element name="Altar" type="tns:Altar"/>
			<xs:element name="Door" type="tns:Door"/>
			<xs:element name="Pew" type="tns:Pew"/>
			<xs:element name="Sarcophagus" type="tns:Sarcophagus"/>
		</xs:choice>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Altar">
	<xs:annotation><xs:documentation>Defines an Altar feature.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="DeityID" type="xs:string"/>
		<xs:element name="Alignment" type="tns:AlignmentRange"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Door">
	<xs:annotation><xs:documentation>Defines a Door feature.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="LockID" type="xs:string" minOccurs="0"/>
		<xs:element name="Material" type="sl:MaterialType"/>
		<xs:element name="Entrance" type="tns:Entrance" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Pew">
	<xs:annotation><xs:documentation>Defines a Pew feature.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Orientation" type="tns:OrientationType"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Sarcophagus">
	<xs:annotation><xs:documentation>Defines a Sarcophagus.</xs:documentation></xs:annotation>
	<xs:sequence>
		<xs:element name="Material" type="sl:MaterialType"/>
		<xs:element name="Inscription" type="xs:string" minOccurs="0"/>
	</xs:sequence>
</xs:complexType>
<xs:complexType name="Entrance">
	<xs:annotation>
		<xs:documentation>
			Contains details about the entrance: open/closed/destroyed status, lock info, etc.
		</xs:documentation>
	</xs:annotation>
	<xs:sequence>
		<xs:element name="EntranceState" type="tns:EntranceStateType"/>
	</xs:sequence>
</xs:complexType>
<!-- Simple Types -->
<xs:simpleType name="MapType">
	<xs:annotation>
		<xs:documentation>
			See: world/include/MapTypes.hpp
			
			0 = World (do not use)
			1 = Overworld (forests, fields, villages, etc)
			2 = Underworld (caverns, dungeons, etc)
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:int">
		<xs:enumeration value="0"/>
		<xs:enumeration value="1"/>
		<xs:enumeration value="2"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="Direction">
	<xs:annotation>
		<xs:documentation>
			See: world/include/Directions.hpp.
			
			This type corresponds to enum Direction.  Though any direction
			can be set, in general, up/down are the ones that should see the
			most use, via stairways, etc.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:int">
		<xs:minInclusive value="1"/>
		<xs:maxInclusive value="11"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="AlignmentRange">
	<xs:annotation>
		<xs:documentation>
			A particular alignment.  See: world/include/AlignmentEnums.hpp.
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:int">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="2"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="OrientationType">
	<xs:annotation>
		<xs:documentation>
			The orientation *of the building*:
			0 = Exits are North/south
			1 = Exits are East/west
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:int">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="1"/>
	</xs:restriction>
</xs:simpleType>
<xs:simpleType name="EntranceStateType">
	<xs:annotation>
		<xs:documentation>
			The state of the entrance.  See world/tiles/features/include/EntranceTypes.hpp.
			0 = destroyed
			1 = open
			2 = closed
		</xs:documentation>
	</xs:annotation>
	<xs:restriction base="xs:int">
		<xs:minInclusive value="0"/>
		<xs:maxInclusive value="2"/>
	</xs:restriction>
</xs:simpleType>
</xs:schema>
